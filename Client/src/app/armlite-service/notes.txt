
It's an arbitrary partition to get most of the stuff you need into service_n_n.js
but the rest is all there (untested). My thought, medium term, is to debug the stand-alone but
the pragmatic short term aim is to avoid lots of unresolved function names.

No Interrupts or Clock

I have no idea whether I have done RunResult the way you want it.

WARNING GetPixel(n) gives you what LDR Rd,n would give you (for Pixels and Charmap)
SO n must be within the permitted ranges for the current mode.
(n is expected to be a multiple of 4 - if not you get what LDR would do)

I have added function GetPixelAreaSize() : int because otherwise you cannot work out whether
the program changed the resolution or what range is valid for GetPixel(n).
(.)pixelAreaSize defaults to 3072 but the program can change it to 12288 (words and pixels)

To avoid a mess, I have given you access to .PixelScreen and .CharScreen so you don't have to
code in magic numbers. Hence GetPixelScreen() and GetCharScreen().
Current values are 0xffff3000 and 0xfffff0e0 and they do not change dynamically.
They are negative with respect to 32 bit numbers but you should pass them as positive in JavaScript.


NOT YET SUPPORTED
*****************

InputText(text: string) : RunResult

HitKey(keyValue : int) : RunResult

function GetMemory(from: int, to: int) : int[]

function GetPixels(from: int, to: int) : int[]

(the single value ones should work)

ONLY TESTED WHAT'S IN THE TEST PROGRAM
*************************************

Note that ConfigureSystem() does a ClearSystem() and ClearSystem() does a Reset().

ConfigureSystem(slowSpeed, delayTime, maxUsableMem, debug, comment_align);
// Match the url ? parameters
// comment_align (int 6-300) included because can pass back formatted assembly listing

Currently slowSpeed and delayTime should not have any impact on the Service Interface but
I left in incase we ever extend to more mixed running.

DEFAULTS
slowSpeed = 40;	// default delay for SLOW mode - is a calling parameter to change it
delayTime = 4;	// default parallel delay in FAST mode - is a calling parameter to change it
maxUsableMem = 1048576;		// first byte we cannot use (currently query string can change)
debug = 0;					// set to 1 by url query string - all current tests are true/false
							// but values might be used for special purposes so keep as an int
comment_align = 24;			// comment alignment default

debug=1 generally alerts on certain errors or interesting situations
maxUsableMem become the SP value on Reset().

