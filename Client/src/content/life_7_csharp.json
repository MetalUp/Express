{
    "Language": "csharp",
    "Title": "Conway's Game of Life - Part 7",
    "Description": "life_7.html",
    "Hints": ["life_7_hint1.html","life_7_hint2.html","life_7_hint3.html"],
    "Messages": [],
    "CodeMustMatch": {},
    "CodeMustNotContain": {},
    "ReadyMadeFunctions": "static bool NextCellValue(List<bool> grid, int c) => WillLive(grid[c], LiveNeighbours(grid, c));\nstatic bool WillLive(bool alive, int neighbours) => (alive && neighbours > 1 && neighbours < 4) | (!alive && neighbours == 3);\nstatic int LiveNeighbours(List<bool> grid, int c) => AdjustedNeighbourCells(c).Count(i => grid[i] == true);\nstatic List<bool> grid1 = new List<bool> { false, true, false, true, false, false, true, true, true, false, false, true, true, false, true, true, false, false, true, true, true, true, true, true, false, false, true, false, true, true, true, false, true, true, true, true, false, true, false, true, false, false, true, true, false, false, false, false, true, false, false, false, true, false, false, false, true, false, false, false, true, false, false, true, false, false, true, false, false, true, true, false, false, false, true, true, false, false, true, true, false, true, true, true, true, false, false, false, false, false, false, false, false, true, true, false, true, false, false, true, true, false, false, false, false, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, false, true, false, false, false, true, false, false, true, true, false, true, false, true, true, false, false, false, false, false, true, false, false, true, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, false, true, false, false, true, true, false, true, false, false, true, false, true, false, true, true, false, false, false, false, true, false, false, true, false, false, false, false, true, false, false, false, true, false, true, false, true, false, false, false, false, false, true, true, false, true, true, false, false, false, false, false, true, false, false, true, true, true, false, false, false, true, false, true, false, false, true, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, false, false, true, false, false, false, true, false, true, false, true, false, false, true, false, false, false, false, false, false, false, false, false, false, true, true, true, false, false, true, false, true, false, false, true, false, true, false, true, false, false, false, false, false, true, false, true, false, false, false, false, true, true, false, false, true, true, false, true, true, false, true, true, false, true, false, false, true, false, true, false, false, true, false, true, true, false, false, false, false, false, true, true, false, false, false, true, true, true, false, false, false, true, true, false, true, true, true, false, false, false, true, false, true, false, false, false, false, false, false, false, false, false, false, true, false, false, false, false, true, true, false, true, false, false, true, true, false, false, true, true, true, false, false, false, false, false, false, false, true, false, false, false, false, false, false, false, false, false, true, false, false, false, true, false };\nstatic List<int> NeighbourCells(int c) => new List<int> { c-21, c-20, c-19, c-1, c+1, c+19, c+20, c+21 };\nstatic int KeepWithinBounds(int i) => i >= 400 ? i - 400 : i < 0 ? i + 400 : i;\nstatic List<int> AdjustedNeighbourCells(int c) => NeighbourCells(c).Select(x => KeepWithinBounds(x)).ToList();",
    "SkeletonCode": "",
    "PasteExpression": false,
    "PasteFunction": false,
    "Tests": "life_7_tests.cs",
    "PreviousTask": "life_6_csharp.json",
    "NextTask": ""
}