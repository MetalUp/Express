{
    "Language": "python",
    "Title": "Conway's Game of Life - Part 3",
    "Description": "life_3.html",
    "Hints": ["life_3_hint1.html","life_3_hint2.html","life_3_hint3.html"],
    "Messages": [],
    "CodeMustMatch": {},
    "CodeMustNotContain": {},
    "ReadyMadeFunctions": "def keep_within_bounds(i) : return  i - 400 if i >= 400 else  i + 400 if i < 0 else i\ndef neighbour_cells(c) : return [ c-21, c-20, c-19, c-1, c+1, c+19, c+20, c+21]\ndef as_grid(cells) : return reduce(lambda s, n : s +  (\"\\n\" if n > 0 and n % 20 == 0 else \"\")+(\"â–  \" if cells[n] else \"  \"), range(0, 400), \"Grid:\\n\")\nexample_cells = [False, True, False, True, False, False, True, True, True, False, False, True, True, False, True, True, False, False, True, True, True, True, True, True, False, False, True, False, True, True, True, False, True, True, True, True, False, True, False, True, False, False, True, True, False, False, False, False, True, False, False, False, True, False, False, False, True, False, False, False, True, False, False, True, False, False, True, False, False, True, True, False, False, False, True, True, False, False, True, True, False, True, True, True, True, False, False, False, False, False, False, False, False, True, True, False, True, False, False, True, True, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, True, False, False, False, True, False, False, True, True, False, True, False, True, True, False, False, False, False, False, True, False, False, True, False, True, False, True, False, True, False, True, False, False, True, False, True, False, True, False, False, True, False, False, True, True, False, True, False, False, True, False, True, False, True, True, False, False, False, False, True, False, False, True, False, False, False, False, True, False, False, False, True, False, True, False, True, False, False, False, False, False, True, True, False, True, True, False, False, False, False, False, True, False, False, True, True, True, False, False, False, True, False, True, False, False, True, True, False, True, False, True, False, True, False, False, True, False, True, False, True, False, True, False, False, False, True, False, False, False, True, False, True, False, True, False, False, True, False, False, False, False, False, False, False, False, False, False, True, True, True, False, False, True, False, True, False, False, True, False, True, False, True, False, False, False, False, False, True, False, True, False, False, False, False, True, True, False, False, True, True, False, True, True, False, True, True, False, True, False, False, True, False, True, False, False, True, False, True, True, False, False, False, False, False, True, True, False, False, False, True, True, True, False, False, False, True, True, False, True, True, True, False, False, False, True, False, True, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, True, True, False, True, False, False, True, True, False, False, True, True, True, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, True, False, False, False, True, False]",
    "SkeletonCode": "",
    "PasteExpression": false,
    "PasteFunction": false,
    "Tests": "life_3_tests.txt",
    "PreviousTask": "life_2_python.json",
    "NextTask": "life_4_python.json"
}