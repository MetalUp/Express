{
    "Messages": {
        "Message1" : "Use of the keyword '{2}' is not permitted",
        "Message2" : "Use of the '{1}' is not permitted",
        "Message3" : "Use of '{1}' is not permitted here, as this would make the function dependent on a variable not passed in as a parameter",
        "Message4" : "Use of '{1}', or any other method that mutates a List is not permitted",
        "Message5" : "Use of single '=', signifying assignment, is not permitted. (To test for equality, use '==')"
    },
    "FilterRules": {
        "csharp": {
            "cmpinfo": "CS.*",
            "stderr": "\\w+Exception"
        },
        "python": {
            "cmpinfo": "\\s\\w*Error:.*",
            "stderr": "\\s\\w*Error:.*"
        }
    },
    "ParsingRules": {
        "csharp": {
            "both": [],
            "expressions": [],
            "functions":[
                [
                    "^\\s*static\\s.*",
                    "Functions must start with the 'static' keyword"
                ],
                [
                    "^.*;\\s*$",
                    "Functions must end with the symbol ';'"
                ],
                [
                    "^.*\\s=>\\s.*",
                    "Functions must include the symbol '=>' followed by the expression to be evaluated"
                ]
            ]
        },
        "python": {
            "both": [],
            "expressions": [],
            "functions":[
                [
                    "^\\s*def\\s+\\w+\\s*\\(",
                    "Functions must start with the 'def' keyword followed by the function name and '('"
                ],
                [
                    "^.*:\\s.*(\\n\\s+)?return.*",
                    "Functions must include the symbol ':' followed by 'return' (may be on the next line if correctly indented) and the expression to be evaluated"
                ]
            ]
        }
    },
    "ValidationRules": {
        "csharp": {
            "both": [
                [
                    ".*(^|\\s+)(return|var|void|using|public|private|protected|class|abstract|readOnly)\\s.*",
                    "Messages.Message1"
                ],
                [
                    "(Console\\.)",
                    "Messages.Message2"
                ],
                [
                    "System\\.",
                    "Messages.Message2"
                ],
                [
                    "\\w*[^=]=[^(=|>)]\\w*",
                    ".Messages.Message5"
                ],
                [
                    "\\W(ArrayList)\\W",
                    "Use of ArrayList is not permitted. Use a typed list such as List<int>"
                ],
                [
                    "\\.(Add|AddRange|Clear|RemoveAll|RemoveAt|RemoveRange)\\s*\\(",
                    "Messages.Message4"
                ]
            ],
            "expressions": [],
            "functions": [
                [                  
                    [
                        "\\s+DateTime\\.(Today|Now)",
                        "Messages.Message3"
                    ]
                ]
            ]
        },
        "python": {
            "both": [
                [
                    "\\s+(print|input)\\s*\\(",
                    "Use of {1} is not permitted"
                ],
                [
                    "\\w*[^=]=[^=]",
                    ".Messages.Message5"
                ],
                [
                    "\\.(append|clear|extend|insert|pop|reverse|sort)\\s*\\(",
                    "Messages.Message4"
                ]
            ],
            "expressions": [],
            "functions": [
                [
                    "\\s(date\\.today|datetime\\.today|datetime\\.now)",
                    "Messages.Message3"
                ]
            ]
        }
    }
}